module.exports = {
  env: {
    browser: true,
  },
  extends: [
    'plugin:@typescript-eslint/recommended',
    'plugin:@typescript-eslint/recommended-requiring-type-checking',
    'plugin:react/recommended',
    // disable any formatting rules handled by ESLint, so we can delegate those to prettier
    // (important: this plugin should be last in the list)
    // https://prettier.io/docs/en/integrating-with-linters.html#disable-formatting-rules
    'prettier',
  ],
  ignorePatterns: ['app/javascript/packs/analytics.js'],
  parser: '@typescript-eslint/parser',
  parserOptions: {
    project: 'tsconfig.json',
    sourceType: 'module',
  },
  plugins: [
    // plugin that adds a rule that formats content using Prettier
    // https://prettier.io/docs/en/integrating-with-linters.html#use-eslint-to-run-prettier
    'prettier',
    '@typescript-eslint/eslint-plugin',
  ],
  rules: {
    'prettier/prettier': ['error'],
    '@typescript-eslint/ban-ts-ignore': [0],
    'max-len': 'off',
    'no-cond-assign': 'error',
    'no-irregular-whitespace': [2],
    'no-unexpected-multiline': [2],
    'valid-jsdoc': [
      2,
      {
        requireParamDescription: false,
        requireReturnDescription: false,
        requireReturn: false,
        prefer: {
          returns: 'return',
        },
        requireReturnType: true,
        requireParamType: true,
      },
    ],
    curly: 'error',
    'guard-for-in': 'off',
    'no-caller': 'error',
    'no-extend-native': [2],
    'no-extra-bind': [2],
    'no-invalid-this': 'off',
    'no-multi-spaces': [2],
    'no-multi-str': [2],
    'no-new-wrappers': 'error',
    'no-throw-literal': 'error',
    'no-with': [2],
    'prefer-promise-reject-errors': [2],
    'array-bracket-newline': [0],
    'array-bracket-spacing': [2, 'never'],
    'array-element-newline': [0],
    'block-spacing': [2, 'never'],
    'brace-style': [2],
    camelcase: [
      0,
      {
        properties: 'never',
        ignoreDestructuring: false,
        ignoreImports: false,
      },
    ],
    'comma-dangle': ['error', 'always-multiline'],
    'comma-spacing': [2],
    'comma-style': [2],
    'computed-property-spacing': [2],
    'eol-last': 'error',
    'func-call-spacing': [2],
    indent: 'off',
    'key-spacing': [2],
    'keyword-spacing': [2],
    'linebreak-style': [2],
    'new-cap': [2],
    'no-array-constructor': [2],
    'no-mixed-spaces-and-tabs': [2],
    'no-multiple-empty-lines': 'error',
    'no-new-object': [2],
    'no-tabs': [2],
    'no-trailing-spaces': 'error',
    'object-curly-spacing': [2],
    'one-var': ['error', 'never'],
    'padded-blocks': [2, 'never'],
    'require-jsdoc': [
      0,
      {
        require: {
          FunctionDeclaration: true,
          MethodDefinition: true,
          ClassDeclaration: true,
          ArrowFunctionExpression: false,
          FunctionExpression: false,
        },
      },
    ],
    semi: [2],
    'semi-spacing': [2],
    'space-before-blocks': [2],
    'spaced-comment': 'error',
    'switch-colon-spacing': [2],
    'arrow-parens': 'off',
    'constructor-super': 'error',
    'generator-star-spacing': [2, 'after'],
    'no-new-symbol': [2],
    'no-this-before-super': [2],
    'no-var': [2],
    'prefer-const': [
      2,
      {
        destructuring: 'all',
        ignoreReadBeforeAssign: false,
      },
    ],
    'prefer-rest-params': [2],
    'prefer-spread': [2],
    'rest-spread-spacing': [2],
    'yield-star-spacing': [2, 'after'],
    '@typescript-eslint/camelcase': 'off',
    '@typescript-eslint/prefer-regexp-exec': 'off',
    '@typescript-eslint/array-type': 'error',
    '@typescript-eslint/ban-types': 'off',
    '@typescript-eslint/consistent-type-assertions': 'off',
    '@typescript-eslint/consistent-type-definitions': 'error',
    '@typescript-eslint/explicit-member-accessibility': 'off',
    '@typescript-eslint/indent': 'off',
    '@typescript-eslint/member-delimiter-style': [
      'error',
      {
        multiline: {
          delimiter: 'semi',
          requireLast: true,
        },
        singleline: {
          delimiter: 'semi',
          requireLast: false,
        },
      },
    ],
    '@typescript-eslint/member-ordering': 'off',
    '@typescript-eslint/no-empty-function': 'off',
    '@typescript-eslint/no-empty-interface': 'off',
    '@typescript-eslint/no-explicit-any': 'off',
    '@typescript-eslint/no-parameter-properties': 'off',
    '@typescript-eslint/no-use-before-define': 'off',
    '@typescript-eslint/prefer-for-of': 'error',
    '@typescript-eslint/prefer-function-type': 'error',
    '@typescript-eslint/semi': ['error', 'always'],
    '@typescript-eslint/unified-signatures': 'error',
    '@typescript-eslint/no-unsafe-member-access': 'off',
    '@typescript-eslint/no-unsafe-assignment': 'off',
    '@typescript-eslint/restrict-template-expressions': 'off',
    'arrow-body-style': 'off',
    complexity: 'off',
    'dot-notation': 'off',
    eqeqeq: ['error', 'smart'],
    'id-blacklist': 'off',
    'id-match': 'off',
    'import/order': 'off',
    'max-classes-per-file': 'off',
    'new-parens': 'error',
    'no-bitwise': 'off',
    'no-console': [
      'error',
      {
        allow: [
          'warn',
          'dir',
          'time',
          'timeEnd',
          'timeLog',
          'trace',
          'assert',
          'clear',
          'count',
          'countReset',
          'group',
          'groupEnd',
          'table',
          'debug',
          'info',
          'dirxml',
          'error',
          'groupCollapsed',
          'Console',
          'profile',
          'profileEnd',
          'timeStamp',
          'context',
        ],
      },
    ],
    'no-debugger': 'error',
    'no-empty': 'off',
    'no-eval': 'error',
    'no-fallthrough': 'off',
    'no-shadow': [
      'off',
      {
        hoist: 'all',
      },
    ],
    'no-undef-init': 'error',
    'no-underscore-dangle': 'off',
    'no-unsafe-finally': 'error',
    'no-unused-expressions': 'error',
    'no-unused-labels': 'error',
    'object-shorthand': 'error',
    'prefer-object-spread': 'error',
    radix: 'error',
    'use-isnan': 'error',
    'valid-typeof': 'off',
    'react/no-unescaped-entities': 'off',
    '@typescript-eslint/explicit-function-return-type': 'off',
    'react/jsx-no-target-blank': 'off',
    '@typescript-eslint/interface-name-prefix': 'off',
    'react/display-name': 'off',
    'block-spacing': 'off',
    'brace-style': 'off',
    'operator-linebreak': 'off',
    '@typescript-eslint/no-inferrable-types': 'off',
    'react/prop-types': 'off',
    '@typescript-eslint/no-unused-vars': 'off',
    '@typescript-eslint/require-await': 'off',
    '@typescript-eslint/no-misused-promises': 'off',
    // "quote-props": "off",
    '@typescript-eslint/prefer-for-of': 'off',
    '@typescript-eslint/no-var-requires': 'off',
    '@typescript-eslint/no-unnecessary-type-assertion': 'off',
    'valid-jsdoc': 'off',
    'react/no-direct-mutation-state': 'off',
    'new-cap': 'off',
  },
  settings: {
    react: {
      version: 'detect',
    },
  },
};
